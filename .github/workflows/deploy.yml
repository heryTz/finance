on:
  push:
    branches:
      - main
  
jobs:
  production:
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: finance_test
          POSTGRES_USER: user
          POSTGRES_PASSWORD: user
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
    
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 

      - name: Install pnpm
        run: corepack enable 

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          tags: herytz/finance
          target: prod
          push: true

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa.pub
          ssh-keyscan -p${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Update app
        run: |
          ssh -p${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd ~/finance/app && \
            git pull origin main && \
            docker compose -f docker-compose.prod.yml up --build -d && \
            docker image prune -f"

      - name: Check health
        run: APP_URL=${{ secrets.APP_URL }} node checkhealth.js
