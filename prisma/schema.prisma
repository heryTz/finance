// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String          @id @default(cuid())
  email         String          @unique
  name          String?
  emailVerified DateTime?
  finances      Finance[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?       @updatedAt
  Account       Account[]
  Session       Session[]
  Tag           Tag[]
  Client        Client[]
  Invoice       Invoice[]
  InvoiceConfig InvoiceConfig[]
  Order         Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Finance {
  id        String    @id @default(cuid())
  label     String
  amount    Decimal
  type      String
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?
  tags      Tag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Tag {
  id        String    @id @default(cuid())
  name      String    @unique
  finances  Finance[]
  User      User      @relation(fields: [userId], references: [id])
  userId    String    @default("iztvu9ziqfcozg14gmpskwwk")
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Client {
  id        String    @id @default(cuid())
  ref       Int       @unique
  name      String
  email     String
  phone     String?
  address   String
  siren     String?
  ape       String?
  nif       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Invoice   Invoice[]
  Owner     User      @relation(fields: [ownerId], references: [id])
  ownerId    String
}

model InvoiceConfig {
  id        String    @id @default(cuid())
  name      String
  email     String
  phone     String?
  address   String
  siren     String?
  ape       String?
  nif       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   String
}

model Order {
  id           String    @id @default(cuid())
  name         String
  qte          Int
  price        Decimal
  deviseSuffix String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  invoice      Invoice   @relation(fields: [invoiceId], references: [id])
  Owner        User      @relation(fields: [ownerId], references: [id])
  ownerId      String
  invoiceId    String
}

model Invoice {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  owner     User      @relation(fields: [ownerId], references: [id])
  client    Client    @relation(fields: [clientId], references: [id])
  clientId  String
  ownerId   String
  orders    Order[]
  tva       Int?
}
