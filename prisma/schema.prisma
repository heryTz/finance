// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String?
  emailVerified DateTime?
  operations    Operation[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?     @updatedAt
  Account       Account[]
  Session       Session[]
  Tag           Tag[]
  Client        Client[]
  Invoice       Invoice[]
  Provider      Provider[]
  Products      Product[]
  PaymentMode   PaymentMode[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Operation {
  id        String    @id @default(cuid())
  label     String
  amount    Decimal   @db.Decimal(10, 2)
  type      String
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?
  tags      Tag[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Tag {
  id         String      @id @default(cuid())
  name       String
  operations Operation[]
  User       User        @relation(fields: [userId], references: [id])
  userId     String      @default("iztvu9ziqfcozg14gmpskwwk")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt

  @@unique([name, userId])
}

model Client {
  id        String    @id @default(cuid())
  ref       String
  name      String
  email     String
  phone     String?
  address   String
  siren     String?
  ape       String?
  nif       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Invoice   Invoice[]
  Owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   String

  @@unique([ref, ownerId])
}

model Provider {
  id        String    @id @default(cuid())
  name      String
  email     String
  phone     String?
  address   String
  siren     String?
  ape       String?
  nif       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   String
  Invoice   Invoice[]
}

model Product {
  id        String    @id @default(cuid())
  name      String
  qte       Float
  price     Float
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Invoice   Invoice   @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  Owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   String
  invoiceId String
}

model PaymentMode {
  id          String    @id @default(cuid())
  name        String
  accountName String?
  iban        String?
  Owner       User      @relation(fields: [onwerId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  onwerId     String
  Invoice     Invoice[]

  @@unique([name, onwerId])
}

model Invoice {
  id            String      @id @default(cuid())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
  owner         User        @relation(fields: [ownerId], references: [id])
  Client        Client      @relation(fields: [clientId], references: [id])
  clientId      String
  ownerId       String
  Products      Product[]
  tva           Int         @default(0)
  ref           String
  currency      String
  Payment       PaymentMode @relation(fields: [paymentModeId], references: [id])
  paymentModeId String
  Provider      Provider    @relation(fields: [providerId], references: [id])
  providerId    String

  @@unique([ref, clientId])
}
